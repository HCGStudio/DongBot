### YamlMime:ManagedReference
items:
- uid: HCGStudio.DongBot.Core.Service.IMessageProvider
  commentId: T:HCGStudio.DongBot.Core.Service.IMessageProvider
  id: IMessageProvider
  parent: HCGStudio.DongBot.Core.Service
  children:
  - HCGStudio.DongBot.Core.Service.IMessageProvider.GetAllGroupsAsync
  - HCGStudio.DongBot.Core.Service.IMessageProvider.GetGroupNameAsync(System.Int64)
  - HCGStudio.DongBot.Core.Service.IMessageProvider.GetGroupUserNameAsync(System.Int64,System.Int64)
  - HCGStudio.DongBot.Core.Service.IMessageProvider.SubscribeGroupMessage(System.Action{HCGStudio.DongBot.Core.Messages.Message,System.Int64,System.Int64,System.Boolean})
  - HCGStudio.DongBot.Core.Service.IMessageProvider.SubscribePrivateMessage(System.Action{HCGStudio.DongBot.Core.Messages.Message,System.Int64})
  langs:
  - csharp
  - vb
  name: IMessageProvider
  nameWithType: IMessageProvider
  fullName: HCGStudio.DongBot.Core.Service.IMessageProvider
  type: Interface
  source:
    remote:
      path: HCGStudio.DongBot.Core/Service/IMessageProvider.cs
      branch: master
      repo: https://github.com/HCGStudio/DongBot.git
    id: IMessageProvider
    path: HCGStudio.DongBot.Core/Service/IMessageProvider.cs
    startLine: 10
  assemblies:
  - HCGStudio.DongBot.Core
  namespace: HCGStudio.DongBot.Core.Service
  summary: "\n消息提供源\n"
  example: []
  syntax:
    content: public interface IMessageProvider
    content.vb: Public Interface IMessageProvider
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: HCGStudio.DongBot.Core.Service.IMessageProvider.SubscribePrivateMessage(System.Action{HCGStudio.DongBot.Core.Messages.Message,System.Int64})
  commentId: M:HCGStudio.DongBot.Core.Service.IMessageProvider.SubscribePrivateMessage(System.Action{HCGStudio.DongBot.Core.Messages.Message,System.Int64})
  id: SubscribePrivateMessage(System.Action{HCGStudio.DongBot.Core.Messages.Message,System.Int64})
  parent: HCGStudio.DongBot.Core.Service.IMessageProvider
  langs:
  - csharp
  - vb
  name: SubscribePrivateMessage(Action<Message, Int64>)
  nameWithType: IMessageProvider.SubscribePrivateMessage(Action<Message, Int64>)
  fullName: HCGStudio.DongBot.Core.Service.IMessageProvider.SubscribePrivateMessage(System.Action<HCGStudio.DongBot.Core.Messages.Message, System.Int64>)
  type: Method
  source:
    remote:
      path: HCGStudio.DongBot.Core/Service/IMessageProvider.cs
      branch: master
      repo: https://github.com/HCGStudio/DongBot.git
    id: SubscribePrivateMessage
    path: HCGStudio.DongBot.Core/Service/IMessageProvider.cs
    startLine: 16
  assemblies:
  - HCGStudio.DongBot.Core
  namespace: HCGStudio.DongBot.Core.Service
  summary: "\n注册私聊信息事件\n"
  example: []
  syntax:
    content: void SubscribePrivateMessage(Action<Message, long> action)
    parameters:
    - id: action
      type: System.Action{HCGStudio.DongBot.Core.Messages.Message,System.Int64}
      description: 注册的事件，参数分别为消息以及发送用户Id
    content.vb: Sub SubscribePrivateMessage(action As Action(Of Message, Long))
  overload: HCGStudio.DongBot.Core.Service.IMessageProvider.SubscribePrivateMessage*
  nameWithType.vb: IMessageProvider.SubscribePrivateMessage(Action(Of Message, Int64))
  fullName.vb: HCGStudio.DongBot.Core.Service.IMessageProvider.SubscribePrivateMessage(System.Action(Of HCGStudio.DongBot.Core.Messages.Message, System.Int64))
  name.vb: SubscribePrivateMessage(Action(Of Message, Int64))
- uid: HCGStudio.DongBot.Core.Service.IMessageProvider.SubscribeGroupMessage(System.Action{HCGStudio.DongBot.Core.Messages.Message,System.Int64,System.Int64,System.Boolean})
  commentId: M:HCGStudio.DongBot.Core.Service.IMessageProvider.SubscribeGroupMessage(System.Action{HCGStudio.DongBot.Core.Messages.Message,System.Int64,System.Int64,System.Boolean})
  id: SubscribeGroupMessage(System.Action{HCGStudio.DongBot.Core.Messages.Message,System.Int64,System.Int64,System.Boolean})
  parent: HCGStudio.DongBot.Core.Service.IMessageProvider
  langs:
  - csharp
  - vb
  name: SubscribeGroupMessage(Action<Message, Int64, Int64, Boolean>)
  nameWithType: IMessageProvider.SubscribeGroupMessage(Action<Message, Int64, Int64, Boolean>)
  fullName: HCGStudio.DongBot.Core.Service.IMessageProvider.SubscribeGroupMessage(System.Action<HCGStudio.DongBot.Core.Messages.Message, System.Int64, System.Int64, System.Boolean>)
  type: Method
  source:
    remote:
      path: HCGStudio.DongBot.Core/Service/IMessageProvider.cs
      branch: master
      repo: https://github.com/HCGStudio/DongBot.git
    id: SubscribeGroupMessage
    path: HCGStudio.DongBot.Core/Service/IMessageProvider.cs
    startLine: 22
  assemblies:
  - HCGStudio.DongBot.Core
  namespace: HCGStudio.DongBot.Core.Service
  summary: "\n注册群组消息事件\n"
  example: []
  syntax:
    content: void SubscribeGroupMessage(Action<Message, long, long, bool> action)
    parameters:
    - id: action
      type: System.Action{HCGStudio.DongBot.Core.Messages.Message,System.Int64,System.Int64,System.Boolean}
      description: 注册的事件，参数分别为消息，群组Id，发送者Id，该消息是否为指定消息
    content.vb: Sub SubscribeGroupMessage(action As Action(Of Message, Long, Long, Boolean))
  overload: HCGStudio.DongBot.Core.Service.IMessageProvider.SubscribeGroupMessage*
  nameWithType.vb: IMessageProvider.SubscribeGroupMessage(Action(Of Message, Int64, Int64, Boolean))
  fullName.vb: HCGStudio.DongBot.Core.Service.IMessageProvider.SubscribeGroupMessage(System.Action(Of HCGStudio.DongBot.Core.Messages.Message, System.Int64, System.Int64, System.Boolean))
  name.vb: SubscribeGroupMessage(Action(Of Message, Int64, Int64, Boolean))
- uid: HCGStudio.DongBot.Core.Service.IMessageProvider.GetAllGroupsAsync
  commentId: M:HCGStudio.DongBot.Core.Service.IMessageProvider.GetAllGroupsAsync
  id: GetAllGroupsAsync
  parent: HCGStudio.DongBot.Core.Service.IMessageProvider
  langs:
  - csharp
  - vb
  name: GetAllGroupsAsync()
  nameWithType: IMessageProvider.GetAllGroupsAsync()
  fullName: HCGStudio.DongBot.Core.Service.IMessageProvider.GetAllGroupsAsync()
  type: Method
  source:
    remote:
      path: HCGStudio.DongBot.Core/Service/IMessageProvider.cs
      branch: master
      repo: https://github.com/HCGStudio/DongBot.git
    id: GetAllGroupsAsync
    path: HCGStudio.DongBot.Core/Service/IMessageProvider.cs
    startLine: 28
  assemblies:
  - HCGStudio.DongBot.Core
  namespace: HCGStudio.DongBot.Core.Service
  summary: "\n获取加入所有组的Id\n"
  example: []
  syntax:
    content: Task<List<long>> GetAllGroupsAsync()
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{System.Int64}}
      description: 所有加入组的集合
    content.vb: Function GetAllGroupsAsync As Task(Of List(Of Long))
  overload: HCGStudio.DongBot.Core.Service.IMessageProvider.GetAllGroupsAsync*
- uid: HCGStudio.DongBot.Core.Service.IMessageProvider.GetGroupNameAsync(System.Int64)
  commentId: M:HCGStudio.DongBot.Core.Service.IMessageProvider.GetGroupNameAsync(System.Int64)
  id: GetGroupNameAsync(System.Int64)
  parent: HCGStudio.DongBot.Core.Service.IMessageProvider
  langs:
  - csharp
  - vb
  name: GetGroupNameAsync(Int64)
  nameWithType: IMessageProvider.GetGroupNameAsync(Int64)
  fullName: HCGStudio.DongBot.Core.Service.IMessageProvider.GetGroupNameAsync(System.Int64)
  type: Method
  source:
    remote:
      path: HCGStudio.DongBot.Core/Service/IMessageProvider.cs
      branch: master
      repo: https://github.com/HCGStudio/DongBot.git
    id: GetGroupNameAsync
    path: HCGStudio.DongBot.Core/Service/IMessageProvider.cs
    startLine: 35
  assemblies:
  - HCGStudio.DongBot.Core
  namespace: HCGStudio.DongBot.Core.Service
  summary: "\n获取群组的名称\n"
  example: []
  syntax:
    content: Task<string> GetGroupNameAsync(long groupId)
    parameters:
    - id: groupId
      type: System.Int64
      description: 群组Id
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: 群组名称
    content.vb: Function GetGroupNameAsync(groupId As Long) As Task(Of String)
  overload: HCGStudio.DongBot.Core.Service.IMessageProvider.GetGroupNameAsync*
- uid: HCGStudio.DongBot.Core.Service.IMessageProvider.GetGroupUserNameAsync(System.Int64,System.Int64)
  commentId: M:HCGStudio.DongBot.Core.Service.IMessageProvider.GetGroupUserNameAsync(System.Int64,System.Int64)
  id: GetGroupUserNameAsync(System.Int64,System.Int64)
  parent: HCGStudio.DongBot.Core.Service.IMessageProvider
  langs:
  - csharp
  - vb
  name: GetGroupUserNameAsync(Int64, Int64)
  nameWithType: IMessageProvider.GetGroupUserNameAsync(Int64, Int64)
  fullName: HCGStudio.DongBot.Core.Service.IMessageProvider.GetGroupUserNameAsync(System.Int64, System.Int64)
  type: Method
  source:
    remote:
      path: HCGStudio.DongBot.Core/Service/IMessageProvider.cs
      branch: master
      repo: https://github.com/HCGStudio/DongBot.git
    id: GetGroupUserNameAsync
    path: HCGStudio.DongBot.Core/Service/IMessageProvider.cs
    startLine: 43
  assemblies:
  - HCGStudio.DongBot.Core
  namespace: HCGStudio.DongBot.Core.Service
  summary: "\n获取群组中用户名称\n"
  example: []
  syntax:
    content: Task<string> GetGroupUserNameAsync(long groupId, long userId)
    parameters:
    - id: groupId
      type: System.Int64
      description: 群组Id
    - id: userId
      type: System.Int64
      description: 用户Id
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: 群组中用户名称
    content.vb: Function GetGroupUserNameAsync(groupId As Long, userId As Long) As Task(Of String)
  overload: HCGStudio.DongBot.Core.Service.IMessageProvider.GetGroupUserNameAsync*
references:
- uid: HCGStudio.DongBot.Core.Service
  commentId: N:HCGStudio.DongBot.Core.Service
  name: HCGStudio.DongBot.Core.Service
  nameWithType: HCGStudio.DongBot.Core.Service
  fullName: HCGStudio.DongBot.Core.Service
- uid: HCGStudio.DongBot.Core.Service.IMessageProvider.SubscribePrivateMessage*
  commentId: Overload:HCGStudio.DongBot.Core.Service.IMessageProvider.SubscribePrivateMessage
  name: SubscribePrivateMessage
  nameWithType: IMessageProvider.SubscribePrivateMessage
  fullName: HCGStudio.DongBot.Core.Service.IMessageProvider.SubscribePrivateMessage
- uid: System.Action{HCGStudio.DongBot.Core.Messages.Message,System.Int64}
  commentId: T:System.Action{HCGStudio.DongBot.Core.Messages.Message,System.Int64}
  parent: System
  definition: System.Action`2
  name: Action<Message, Int64>
  nameWithType: Action<Message, Int64>
  fullName: System.Action<HCGStudio.DongBot.Core.Messages.Message, System.Int64>
  nameWithType.vb: Action(Of Message, Int64)
  fullName.vb: System.Action(Of HCGStudio.DongBot.Core.Messages.Message, System.Int64)
  name.vb: Action(Of Message, Int64)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: HCGStudio.DongBot.Core.Messages.Message
    name: Message
    nameWithType: Message
    fullName: HCGStudio.DongBot.Core.Messages.Message
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: HCGStudio.DongBot.Core.Messages.Message
    name: Message
    nameWithType: Message
    fullName: HCGStudio.DongBot.Core.Messages.Message
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`2
  commentId: T:System.Action`2
  isExternal: true
  name: Action<T1, T2>
  nameWithType: Action<T1, T2>
  fullName: System.Action<T1, T2>
  nameWithType.vb: Action(Of T1, T2)
  fullName.vb: System.Action(Of T1, T2)
  name.vb: Action(Of T1, T2)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: HCGStudio.DongBot.Core.Service.IMessageProvider.SubscribeGroupMessage*
  commentId: Overload:HCGStudio.DongBot.Core.Service.IMessageProvider.SubscribeGroupMessage
  name: SubscribeGroupMessage
  nameWithType: IMessageProvider.SubscribeGroupMessage
  fullName: HCGStudio.DongBot.Core.Service.IMessageProvider.SubscribeGroupMessage
- uid: System.Action{HCGStudio.DongBot.Core.Messages.Message,System.Int64,System.Int64,System.Boolean}
  commentId: T:System.Action{HCGStudio.DongBot.Core.Messages.Message,System.Int64,System.Int64,System.Boolean}
  parent: System
  definition: System.Action`4
  name: Action<Message, Int64, Int64, Boolean>
  nameWithType: Action<Message, Int64, Int64, Boolean>
  fullName: System.Action<HCGStudio.DongBot.Core.Messages.Message, System.Int64, System.Int64, System.Boolean>
  nameWithType.vb: Action(Of Message, Int64, Int64, Boolean)
  fullName.vb: System.Action(Of HCGStudio.DongBot.Core.Messages.Message, System.Int64, System.Int64, System.Boolean)
  name.vb: Action(Of Message, Int64, Int64, Boolean)
  spec.csharp:
  - uid: System.Action`4
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: HCGStudio.DongBot.Core.Messages.Message
    name: Message
    nameWithType: Message
    fullName: HCGStudio.DongBot.Core.Messages.Message
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`4
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: HCGStudio.DongBot.Core.Messages.Message
    name: Message
    nameWithType: Message
    fullName: HCGStudio.DongBot.Core.Messages.Message
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`4
  commentId: T:System.Action`4
  isExternal: true
  name: Action<T1, T2, T3, T4>
  nameWithType: Action<T1, T2, T3, T4>
  fullName: System.Action<T1, T2, T3, T4>
  nameWithType.vb: Action(Of T1, T2, T3, T4)
  fullName.vb: System.Action(Of T1, T2, T3, T4)
  name.vb: Action(Of T1, T2, T3, T4)
  spec.csharp:
  - uid: System.Action`4
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T4
    nameWithType: T4
    fullName: T4
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`4
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T4
    nameWithType: T4
    fullName: T4
  - name: )
    nameWithType: )
    fullName: )
- uid: HCGStudio.DongBot.Core.Service.IMessageProvider.GetAllGroupsAsync*
  commentId: Overload:HCGStudio.DongBot.Core.Service.IMessageProvider.GetAllGroupsAsync
  name: GetAllGroupsAsync
  nameWithType: IMessageProvider.GetAllGroupsAsync
  fullName: HCGStudio.DongBot.Core.Service.IMessageProvider.GetAllGroupsAsync
- uid: System.Threading.Tasks.Task{System.Collections.Generic.List{System.Int64}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.List{System.Int64}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<List<Int64>>
  nameWithType: Task<List<Int64>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.List<System.Int64>>
  nameWithType.vb: Task(Of List(Of Int64))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of System.Int64))
  name.vb: Task(Of List(Of Int64))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: HCGStudio.DongBot.Core.Service.IMessageProvider.GetGroupNameAsync*
  commentId: Overload:HCGStudio.DongBot.Core.Service.IMessageProvider.GetGroupNameAsync
  name: GetGroupNameAsync
  nameWithType: IMessageProvider.GetGroupNameAsync
  fullName: HCGStudio.DongBot.Core.Service.IMessageProvider.GetGroupNameAsync
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Threading.Tasks.Task{System.String}
  commentId: T:System.Threading.Tasks.Task{System.String}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<String>
  nameWithType: Task<String>
  fullName: System.Threading.Tasks.Task<System.String>
  nameWithType.vb: Task(Of String)
  fullName.vb: System.Threading.Tasks.Task(Of System.String)
  name.vb: Task(Of String)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: HCGStudio.DongBot.Core.Service.IMessageProvider.GetGroupUserNameAsync*
  commentId: Overload:HCGStudio.DongBot.Core.Service.IMessageProvider.GetGroupUserNameAsync
  name: GetGroupUserNameAsync
  nameWithType: IMessageProvider.GetGroupUserNameAsync
  fullName: HCGStudio.DongBot.Core.Service.IMessageProvider.GetGroupUserNameAsync
