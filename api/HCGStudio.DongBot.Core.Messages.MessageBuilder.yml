### YamlMime:ManagedReference
items:
- uid: HCGStudio.DongBot.Core.Messages.MessageBuilder
  commentId: T:HCGStudio.DongBot.Core.Messages.MessageBuilder
  id: MessageBuilder
  parent: HCGStudio.DongBot.Core.Messages
  children:
  - HCGStudio.DongBot.Core.Messages.MessageBuilder.#ctor(System.Int32)
  - HCGStudio.DongBot.Core.Messages.MessageBuilder.Append(HCGStudio.DongBot.Core.Messages.Message)
  - HCGStudio.DongBot.Core.Messages.MessageBuilder.ToMessage
  langs:
  - csharp
  - vb
  name: MessageBuilder
  nameWithType: MessageBuilder
  fullName: HCGStudio.DongBot.Core.Messages.MessageBuilder
  type: Class
  source:
    remote:
      path: HCGStudio.DongBot.Core/Messages/MessageBuilder.cs
      branch: master
      repo: https://github.com/HCGStudio/DongBot.git
    id: MessageBuilder
    path: HCGStudio.DongBot.Core/Messages/MessageBuilder.cs
    startLine: 7
  assemblies:
  - HCGStudio.DongBot.Core
  namespace: HCGStudio.DongBot.Core.Messages
  summary: "\n用于构建复杂消息\n"
  example: []
  syntax:
    content: public class MessageBuilder
    content.vb: Public Class MessageBuilder
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: HCGStudio.DongBot.Core.Messages.MessageBuilder.#ctor(System.Int32)
  commentId: M:HCGStudio.DongBot.Core.Messages.MessageBuilder.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: HCGStudio.DongBot.Core.Messages.MessageBuilder
  langs:
  - csharp
  - vb
  name: MessageBuilder(Int32)
  nameWithType: MessageBuilder.MessageBuilder(Int32)
  fullName: HCGStudio.DongBot.Core.Messages.MessageBuilder.MessageBuilder(System.Int32)
  type: Constructor
  source:
    remote:
      path: HCGStudio.DongBot.Core/Messages/MessageBuilder.cs
      branch: master
      repo: https://github.com/HCGStudio/DongBot.git
    id: .ctor
    path: HCGStudio.DongBot.Core/Messages/MessageBuilder.cs
    startLine: 15
  assemblies:
  - HCGStudio.DongBot.Core
  namespace: HCGStudio.DongBot.Core.Messages
  summary: "\n初始化构建复杂消息的类\n"
  example: []
  syntax:
    content: public MessageBuilder(int capacity = 8)
    parameters:
    - id: capacity
      type: System.Int32
      description: 初始元素个数
    content.vb: Public Sub New(capacity As Integer = 8)
  overload: HCGStudio.DongBot.Core.Messages.MessageBuilder.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: HCGStudio.DongBot.Core.Messages.MessageBuilder.Append(HCGStudio.DongBot.Core.Messages.Message)
  commentId: M:HCGStudio.DongBot.Core.Messages.MessageBuilder.Append(HCGStudio.DongBot.Core.Messages.Message)
  id: Append(HCGStudio.DongBot.Core.Messages.Message)
  parent: HCGStudio.DongBot.Core.Messages.MessageBuilder
  langs:
  - csharp
  - vb
  name: Append(Message)
  nameWithType: MessageBuilder.Append(Message)
  fullName: HCGStudio.DongBot.Core.Messages.MessageBuilder.Append(HCGStudio.DongBot.Core.Messages.Message)
  type: Method
  source:
    remote:
      path: HCGStudio.DongBot.Core/Messages/MessageBuilder.cs
      branch: master
      repo: https://github.com/HCGStudio/DongBot.git
    id: Append
    path: HCGStudio.DongBot.Core/Messages/MessageBuilder.cs
    startLine: 25
  assemblies:
  - HCGStudio.DongBot.Core
  namespace: HCGStudio.DongBot.Core.Messages
  summary: "\n将消息加入到消息构建器中\n"
  example: []
  syntax:
    content: public MessageBuilder Append(Message message)
    parameters:
    - id: message
      type: HCGStudio.DongBot.Core.Messages.Message
      description: 新添加的消息
    return:
      type: HCGStudio.DongBot.Core.Messages.MessageBuilder
      description: 添加消息后的本实例
    content.vb: Public Function Append(message As Message) As MessageBuilder
  overload: HCGStudio.DongBot.Core.Messages.MessageBuilder.Append*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: HCGStudio.DongBot.Core.Messages.MessageBuilder.ToMessage
  commentId: M:HCGStudio.DongBot.Core.Messages.MessageBuilder.ToMessage
  id: ToMessage
  parent: HCGStudio.DongBot.Core.Messages.MessageBuilder
  langs:
  - csharp
  - vb
  name: ToMessage()
  nameWithType: MessageBuilder.ToMessage()
  fullName: HCGStudio.DongBot.Core.Messages.MessageBuilder.ToMessage()
  type: Method
  source:
    remote:
      path: HCGStudio.DongBot.Core/Messages/MessageBuilder.cs
      branch: master
      repo: https://github.com/HCGStudio/DongBot.git
    id: ToMessage
    path: HCGStudio.DongBot.Core/Messages/MessageBuilder.cs
    startLine: 38
  assemblies:
  - HCGStudio.DongBot.Core
  namespace: HCGStudio.DongBot.Core.Messages
  summary: "\n获取构建的复合消息\n"
  example: []
  syntax:
    content: public UnionMessage ToMessage()
    return:
      type: HCGStudio.DongBot.Core.Messages.UnionMessage
      description: 构建的复合消息
    content.vb: Public Function ToMessage As UnionMessage
  overload: HCGStudio.DongBot.Core.Messages.MessageBuilder.ToMessage*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: HCGStudio.DongBot.Core.Messages
  commentId: N:HCGStudio.DongBot.Core.Messages
  name: HCGStudio.DongBot.Core.Messages
  nameWithType: HCGStudio.DongBot.Core.Messages
  fullName: HCGStudio.DongBot.Core.Messages
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: HCGStudio.DongBot.Core.Messages.MessageBuilder.#ctor*
  commentId: Overload:HCGStudio.DongBot.Core.Messages.MessageBuilder.#ctor
  name: MessageBuilder
  nameWithType: MessageBuilder.MessageBuilder
  fullName: HCGStudio.DongBot.Core.Messages.MessageBuilder.MessageBuilder
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: HCGStudio.DongBot.Core.Messages.MessageBuilder.Append*
  commentId: Overload:HCGStudio.DongBot.Core.Messages.MessageBuilder.Append
  name: Append
  nameWithType: MessageBuilder.Append
  fullName: HCGStudio.DongBot.Core.Messages.MessageBuilder.Append
- uid: HCGStudio.DongBot.Core.Messages.Message
  commentId: T:HCGStudio.DongBot.Core.Messages.Message
  parent: HCGStudio.DongBot.Core.Messages
  name: Message
  nameWithType: Message
  fullName: HCGStudio.DongBot.Core.Messages.Message
- uid: HCGStudio.DongBot.Core.Messages.MessageBuilder
  commentId: T:HCGStudio.DongBot.Core.Messages.MessageBuilder
  parent: HCGStudio.DongBot.Core.Messages
  name: MessageBuilder
  nameWithType: MessageBuilder
  fullName: HCGStudio.DongBot.Core.Messages.MessageBuilder
- uid: HCGStudio.DongBot.Core.Messages.MessageBuilder.ToMessage*
  commentId: Overload:HCGStudio.DongBot.Core.Messages.MessageBuilder.ToMessage
  name: ToMessage
  nameWithType: MessageBuilder.ToMessage
  fullName: HCGStudio.DongBot.Core.Messages.MessageBuilder.ToMessage
- uid: HCGStudio.DongBot.Core.Messages.UnionMessage
  commentId: T:HCGStudio.DongBot.Core.Messages.UnionMessage
  parent: HCGStudio.DongBot.Core.Messages
  name: UnionMessage
  nameWithType: UnionMessage
  fullName: HCGStudio.DongBot.Core.Messages.UnionMessage
